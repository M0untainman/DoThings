(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"body{\n    background-color: black;\n}\n#taskContainer{\n    color: white;\n    \n}\n\n.taskItem{\n    color: white;\n    border: chartreuse;\n    border-style: inset;\n}\n#btn_add {\n    -webkit-border-radius: 100px;\n    -moz-border-radius: 100px;\n    border-radius: 100px;\n    height: 50px;\n    line-height: 50px;\n    color: #FFFFFF;\n    font-family: Arial;\n    width: 56px;\n    font-size: 100px;\n    font-weight: 400;\n    padding: 17px;\n    background-color: #128D31;\n    -webkit-box-shadow: 1px 1px 20px 0 #000000;\n    -moz-box-shadow: 1px 1px 20px 0 #000000;\n    box-shadow: 1px 1px 20px 0 #000000;\n    text-shadow: 1px 1px 20px #000000;\n    text-decoration: none;\n    display: inline-block;\n    cursor: pointer;\n    text-align: center;\n }\n \n .btn_add:hover {\n    background: #128D31;\n    border: solid #FFFFFF 7px;\n    -webkit-border-radius: 62px;\n    -moz-border-radius: 62px;\n    border-radius: 62px;\n    text-decoration: none;\n }\n\n .btn_done {\n    -webkit-border-radius: 20px;\n    -moz-border-radius: 20px;\n    border-radius: 20px;\n    color: #FFFFFF;\n    font-family: Brush Script MT;\n    font-size: 2rem;\n    font-weight: 100;\n    padding: 40px;\n    background-color: #FF0000;\n    -webkit-box-shadow: 1px 1px 20px 0 #000000;\n    -moz-box-shadow: 1px 1px 20px 0 #000000;\n    box-shadow: 1px 1px 20px 0 #000000;\n    text-shadow: 1px 1px 20px #000000;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    width: 2rem;\n    height: 0.5rem;\n }\n \n .btn_done:hover {\n    background: #FB3A3A;\n    border: solid #DD380D 1px;\n    -webkit-border-radius: 20px;\n    -moz-border-radius: 20px;\n    border-radius: 20px;\n    text-decoration: none;\n }","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,uBAAuB;AAC3B;AACA;IACI,YAAY;;AAEhB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;AACA;IACI,4BAA4B;IAC5B,yBAAyB;IACzB,oBAAoB;IACpB,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,0CAA0C;IAC1C,uCAAuC;IACvC,kCAAkC;IAClC,iCAAiC;IACjC,qBAAqB;IACrB,qBAAqB;IACrB,eAAe;IACf,kBAAkB;CACrB;;CAEA;IACG,mBAAmB;IACnB,yBAAyB;IACzB,2BAA2B;IAC3B,wBAAwB;IACxB,mBAAmB;IACnB,qBAAqB;CACxB;;CAEA;IACG,2BAA2B;IAC3B,wBAAwB;IACxB,mBAAmB;IACnB,cAAc;IACd,4BAA4B;IAC5B,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,yBAAyB;IACzB,0CAA0C;IAC1C,uCAAuC;IACvC,kCAAkC;IAClC,iCAAiC;IACjC,qBAAqB;IACrB,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,cAAc;CACjB;;CAEA;IACG,mBAAmB;IACnB,yBAAyB;IACzB,2BAA2B;IAC3B,wBAAwB;IACxB,mBAAmB;IACnB,qBAAqB;CACxB",sourcesContent:["body{\n    background-color: black;\n}\n#taskContainer{\n    color: white;\n    \n}\n\n.taskItem{\n    color: white;\n    border: chartreuse;\n    border-style: inset;\n}\n#btn_add {\n    -webkit-border-radius: 100px;\n    -moz-border-radius: 100px;\n    border-radius: 100px;\n    height: 50px;\n    line-height: 50px;\n    color: #FFFFFF;\n    font-family: Arial;\n    width: 56px;\n    font-size: 100px;\n    font-weight: 400;\n    padding: 17px;\n    background-color: #128D31;\n    -webkit-box-shadow: 1px 1px 20px 0 #000000;\n    -moz-box-shadow: 1px 1px 20px 0 #000000;\n    box-shadow: 1px 1px 20px 0 #000000;\n    text-shadow: 1px 1px 20px #000000;\n    text-decoration: none;\n    display: inline-block;\n    cursor: pointer;\n    text-align: center;\n }\n \n .btn_add:hover {\n    background: #128D31;\n    border: solid #FFFFFF 7px;\n    -webkit-border-radius: 62px;\n    -moz-border-radius: 62px;\n    border-radius: 62px;\n    text-decoration: none;\n }\n\n .btn_done {\n    -webkit-border-radius: 20px;\n    -moz-border-radius: 20px;\n    border-radius: 20px;\n    color: #FFFFFF;\n    font-family: Brush Script MT;\n    font-size: 2rem;\n    font-weight: 100;\n    padding: 40px;\n    background-color: #FF0000;\n    -webkit-box-shadow: 1px 1px 20px 0 #000000;\n    -moz-box-shadow: 1px 1px 20px 0 #000000;\n    box-shadow: 1px 1px 20px 0 #000000;\n    text-shadow: 1px 1px 20px #000000;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    width: 2rem;\n    height: 0.5rem;\n }\n \n .btn_done:hover {\n    background: #FB3A3A;\n    border: solid #DD380D 1px;\n    -webkit-border-radius: 20px;\n    -moz-border-radius: 20px;\n    border-radius: 20px;\n    text-decoration: none;\n }"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var p=[].concat(n[c]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],c=r.base?d[0]+r.base:d[0],p=a[c]||0,A="".concat(c," ").concat(p);a[c]=p+1;var l=t(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var x=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:x,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var d=r(n,o),c=0;c<a.length;c++){var p=t(a[c]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},241:(n,e,t)=>{function r(n,e){let t=o(n,e),r=JSON.parse(localStorage.getItem("taskList"))||[];r.push(t),localStorage.setItem("taskList",JSON.stringify(r)),a()}t.d(e,{ZP:()=>r});const o=(n,e)=>({taskTitle:n,taskDescription:e}),a=()=>{const n=document.getElementById("taskContainer");n.innerHTML="",JSON.parse(localStorage.getItem("taskList")).forEach(((e,t)=>{const r=document.createElement("div");r.classList.add("taskItem"),r.id=`${t}`,n.appendChild(r);const o=document.createElement("p");o.innerHTML=e.taskTitle,r.appendChild(o);const s=document.createElement("p");s.innerHTML=e.taskDescription,r.appendChild(s);const d=document.createElement("div");d.classList.add("btn_done"),d.innerHTML="Done",d.addEventListener("click",(n=>{!function(n){let e=JSON.parse(localStorage.getItem("taskList")),t=n.srcElement.parentElement.id;e.splice(t,1),localStorage.setItem("taskList",JSON.stringify(e)),a()}(n)})),r.appendChild(d);const c=document.createElement("div");c.classList.add("btn_done"),c.innerHTML="Edit",c.addEventListener("click",(n=>i(n))),r.appendChild(c)}))},i=n=>{let e=JSON.parse(localStorage.getItem("taskList")),t=n.srcElement.parentElement.id;e[t].taskTitle="changed title",e[t].taskDescription="changed description",localStorage.setItem("taskList",JSON.stringify(e)),a()}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),s=t(565),d=t.n(s),c=t(216),p=t.n(c),A=t(589),l=t.n(A),u=t(426),x={};x.styleTagTransform=l(),x.setAttributes=d(),x.insert=i().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=p(),e()(u.Z,x),u.Z&&u.Z.locals&&u.Z.locals;var B=t(241);const C=document.getElementById("btn_add");let b=document.getElementById("task_title"),m=document.getElementById("task_description");C.addEventListener("click",(()=>{(0,B.ZP)(b.value,m.value),b.value="",m.value=""})),console.log("fix display")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,